server:
  http_listen_port: 9080
  grpc_listen_port: 0
#  log_level: debug

positions:
  filename: /tmp/positions.yaml
  sync_period: 10s

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: my-org
    backoff_config:
      min_period: 500ms
      max_period: 5s
      max_retries: 10
    external_labels:
      host: "$(HOSTNAME)"
      environment: production
      cluster: "production-cluster"
    batchwait: 1s
    batchsize: 102400
    timeout: 30s

scrape_configs:
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'
      - source_labels: ['__meta_docker_container_log_path']
        target_label: '__path__'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'service'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'project'
    pipeline_stages:
      - docker: {}

  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: system
          host: "$(HOSTNAME)"
          __path__: /var/log/**/*.log,/var/log/**/*.log.[0-9],/var/log/**/*.log.[0-9][0-9]
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w{3}\s\d{2}\s\d{2}:\d{2}:\d{2})\s(?P<hostname>\S+)\s(?P<service>\w+)(?:\[(?P<pid>\d+)\])?:\s(?P<message>.+)'
      - timestamp:
          source: timestamp
          format: "Jan 02 15:04:05"
          location: "Africa/Johannesburg"
          fallback_to_current_time: true
      - labels:
          service:
          hostname:
          pid: