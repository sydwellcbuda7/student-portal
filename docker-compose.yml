
version: '3.8'

services:
  back_end:
    build:
      context: .
      dockerfile: Dockerfile
    image: sydwellcbu/student_portal:0.0.1-SNAPSHOT
    container_name: student-portal-container
    restart: unless-stopped
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/student_portal
      SPRING_DATASOURCE_USERNAME: student_user
      SPRING_DATASOURCE_PASSWORD: student_pass

      SPRING_MAIL_HOST: maildev
      SPRING_MAIL_PORT: 1025
      SPRING_MAIL_USERNAME: null
      SPRING_MAIL_PASSWORD: null
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: false
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: false

      CLIENT_HOST: student-portal-ui-container
      CLIENT_PORT: 4200
    depends_on:
      - mysql_db
      - maildev
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 60s

  front_end:
    image: sydwellcbu/student_portal_ui:0.0.1-SNAPSHOT
    container_name: student-portal-ui-container
    restart: unless-stopped
    ports:
      - "4200:4200"
      - "9113:9113"
    depends_on:
      - back_end
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 30s

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    restart: unless-stopped
    command:
      - "--nginx.scrape-uri=http://student-portal-ui-container:9113/nginx_status"
      - "--web.listen-address=:9114"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
        reservations:
          cpus: '0.05'
          memory: 32M
    depends_on:
      - front_end
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9114/metrics"]
      interval: 20s
      timeout: 5s
      retries: 3

  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: student_portal
      MYSQL_USER: student_user
      MYSQL_PASSWORD: student_pass
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  mysql-exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysql-exporter
    restart: unless-stopped
    ports:
      - "9104:9104"
    volumes:
      - ./monitoring/mysql-exporter/mysql-exporter.cnf:/etc/mysql/mysql-exporter.cnf
    command: --config.my-cnf=/etc/mysql/mysql-exporter.cnf
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M
    depends_on:
      - mysql_db
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9104/metrics"]
      interval: 20s
      timeout: 5s
      retries: 3

  maildev:
    image: maildev/maildev
    container_name: maildev-container
    restart: unless-stopped
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "1025"]
      interval: 20s
      timeout: 5s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    depends_on:
      - node_exporter
      - alertmanager
      - victoriametrics
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9090/-/healthy"]
      interval: 20s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 512M
    depends_on:
      - prometheus
      - loki
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/api/health" ]
      interval: 20s
      timeout: 5s
      retries: 3

  promtail:
    image: grafana/promtail:2.9.4
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - ./monitoring/promtail:/etc/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    depends_on:
      - loki
    restart: unless-stopped

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)'
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 5G
        reservations:
          cpus: '0.5'
          memory: 2G
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9100/metrics"]
      interval: 20s
      timeout: 5s
      retries: 3

  loki:
    image: grafana/loki:2.9.4
    container_name: loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/loki-config.yml
      - loki_data:/loki
    command:
      - -config.expand-env=true
      - -config.file=/etc/loki/loki-config.yml
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3100/ready" ]
      interval: 20s
      timeout: 5s
      retries: 3

  alertmanager:
    image: quay.io/prometheus/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9093/-/healthy"]
      interval: 20s
      timeout: 5s
      retries: 3

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.111.0
    container_name: victoriametrics
    restart: unless-stopped
    ports:
      - "8428:8428"
    command:
      - '-retentionPeriod=30d'
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8428/health"]
      interval: 20s
      timeout: 5s
      retries: 3


  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/sys
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080/healthz"]
      interval: 20s
      timeout: 5s
      retries: 3

  blackbox-exporter:
    image: prom/blackbox-exporter
    container_name: blackbox-exporter
    restart: unless-stopped
    ports:
      - "9115:9115"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:9115"]
      interval: 20s
      timeout: 5s
      retries: 3


networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.100.0/24"
          gateway: "192.168.100.1"
          ip_range: "192.168.100.128/25"
          aux_addresses:
            host1: "192.168.100.10"
            host2: "192.168.100.11"
    enable_ipv6: true
    internal: false
    attachable: true


volumes:
  mysql_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local

#docker inspect -f '{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -q) | sed 's#^/##'
